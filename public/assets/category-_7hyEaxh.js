import{l as n,m as g}from"./index-Cp2leT6j.js";const a=n.create({baseURL:"http://localhost:8000/api",withCredentials:!0,headers:{Accept:"application/json","Content-Type":"application/json"}}),o={getCategories(e=null){return e?a.get(`/categories?type=${e}`):a.get("/categories")},getIncomeCategories(){return a.get("/categories/income")},getExpenseCategories(){return a.get("/categories/expense")},getCategory(e){return a.get(`/categories/${e}`)},createCategory(e){return a.post("/categories",e)},updateCategory(e,r){return a.put(`/categories/${e}`,r)},deleteCategory(e){return a.delete(`/categories/${e}`)}},l=g("category",{state:()=>({categories:[],category:null,loading:!1,error:null}),getters:{getCategoryById:e=>r=>e.categories.find(t=>t.id===parseInt(r)),getMainCategories:e=>e.categories.filter(r=>r.isMain),getSubCategories:e=>r=>e.categories.filter(t=>t.parent_id===parseInt(r)),getIncomeCategories:e=>e.categories.filter(r=>r.is_income),getExpenseCategories:e=>e.categories.filter(r=>!r.is_income),getMainIncomeCategories:e=>e.categories.filter(r=>r.isMain&&r.is_income),getMainExpenseCategories:e=>e.categories.filter(r=>r.isMain&&!r.is_income)},actions:{async fetchCategories(e=null){this.loading=!0;try{const r=await o.getCategories(e);this.categories=r.data.categories,this.error=null}catch(r){this.error=r.message||"Nie udało się pobrać kategorii",console.error("Błąd podczas pobierania kategorii:",r)}finally{this.loading=!1}},async fetchIncomeCategories(){this.loading=!0;try{const e=await o.getIncomeCategories();this.categories=e.data.categories,this.error=null}catch(e){this.error=e.message||"Nie udało się pobrać kategorii przychodów",console.error("Błąd podczas pobierania kategorii przychodów:",e)}finally{this.loading=!1}},async fetchExpenseCategories(){this.loading=!0;try{const e=await o.getExpenseCategories();this.categories=e.data.categories,this.error=null}catch(e){this.error=e.message||"Nie udało się pobrać kategorii wydatków",console.error("Błąd podczas pobierania kategorii wydatków:",e)}finally{this.loading=!1}},async fetchCategory(e){this.loading=!0;try{const r=await o.getCategory(e);this.category=r.data.category,this.error=null}catch(r){this.error=r.message||`Nie udało się pobrać kategorii o ID ${e}`,console.error(`Błąd podczas pobierania kategorii o ID ${e}:`,r)}finally{this.loading=!1}},async createCategory(e){this.loading=!0;try{const r=await o.createCategory(e);return this.categories.push(r.data.category),this.error=null,r.data.category}catch(r){throw this.error=r.message||"Nie udało się utworzyć kategorii",console.error("Błąd podczas tworzenia kategorii:",r),r}finally{this.loading=!1}},async updateCategory(e,r){this.loading=!0;try{const t=await o.updateCategory(e,r),i=this.categories.findIndex(s=>s.id===parseInt(e));return i!==-1&&(this.categories[i]=t.data.category),this.error=null,t.data.category}catch(t){throw this.error=t.message||`Nie udało się zaktualizować kategorii o ID ${e}`,console.error(`Błąd podczas aktualizacji kategorii o ID ${e}:`,t),t}finally{this.loading=!1}},async deleteCategory(e){this.loading=!0;try{await o.deleteCategory(e),this.categories=this.categories.filter(r=>r.id!==parseInt(e)),this.error=null}catch(r){throw this.error=r.message||`Nie udało się usunąć kategorii o ID ${e}`,console.error(`Błąd podczas usuwania kategorii o ID ${e}:`,r),r}finally{this.loading=!1}}}});export{l as u};
